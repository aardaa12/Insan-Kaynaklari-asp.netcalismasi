@model List<İnsan_Kaynakları.Models.Başvuru>
@{
    ViewData["Title"] = "Başvuru Paneli";
}

<div class="row">
    <div class="col-12">
        <!-- Dashboard Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1>
                <i class="fas fa-chart-line me-2"></i>
                Başvuru Paneli
            </h1>
            <div>
                <span class="badge bg-primary fs-6">@Model.Count Toplam Başvuru</span>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary ms-2">
                    <i class="fas fa-briefcase me-1"></i>
                    İş İlanları
                </a>
            </div>
        </div>

        <!-- Overall Statistics -->
        <div class="row mb-4">
            <div class="col-lg-8">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-chart-bar me-2"></i>
                            Genel İstatistikler
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-md-2">
                                <div class="border-end">
                                    <h3 class="text-info">@Model.Count(b => b.Durum == "Yeni Başvuru")</h3>
                                    <small class="text-muted">Yeni Başvuru</small>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="border-end">
                                    <h3 class="text-warning">@Model.Count(b => b.Durum == "Değerlendiriliyor")</h3>
                                    <small class="text-muted">Değerlendiriliyor</small>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="border-end">
                                    <h3 class="text-secondary">@Model.Count(b => b.Durum == "Mülakata Çağrıldı")</h3>
                                    <small class="text-muted">Mülakat</small>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="border-end">
                                    <h3 class="text-success">@Model.Count(b => b.Durum == "Kabul Edildi")</h3>
                                    <small class="text-muted">Kabul</small>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="border-end">
                                    <h3 class="text-danger">@Model.Count(b => b.Durum == "Reddedildi")</h3>
                                    <small class="text-muted">Reddedildi</small>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <h3 class="text-primary">@(Model.Any() ? Model.Average(b => b.Puan).ToString("F1") : "0")</h3>
                                <small class="text-muted">Ort. Puan</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <div class="card">
                    <div class="card-header bg-success text-white">
                        <h6 class="mb-0">
                            <i class="fas fa-calendar me-2"></i>
                            Bu Hafta
                        </h6>
                    </div>
                    <div class="card-body">
                        @{
                            var thisWeek = Model.Where(b => b.BaşvuruTarihi >= DateTime.Now.AddDays(-7)).Count();
                            var upcomingInterviews = Model.Where(b => b.MülakatTarihi.HasValue &&
                            b.MülakatTarihi.Value >= DateTime.Now &&
                            b.MülakatTarihi.Value <= DateTime.Now.AddDays(7)).Count();
                        }
                        <p class="mb-2">
                            <i class="fas fa-plus-circle text-success me-2"></i>
                            <strong>@thisWeek</strong> yeni başvuru
                        </p>
                        <p class="mb-0">
                            <i class="fas fa-calendar-check text-warning me-2"></i>
                            <strong>@upcomingInterviews</strong> mülakat planlandı
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Filter Tabs -->
        <div class="card mb-4">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="applicationTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all" type="button">
                            <i class="fas fa-list me-1"></i>
                            Tüm Başvurular (@Model.Count)
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="new-tab" data-bs-toggle="tab" data-bs-target="#new" type="button">
                            <i class="fas fa-star me-1"></i>
                            Yeni (@Model.Count(b => b.Durum == "Yeni Başvuru"))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="interview-tab" data-bs-toggle="tab" data-bs-target="#interview" type="button">
                            <i class="fas fa-handshake me-1"></i>
                            Mülakatlar (@Model.Count(b => b.Durum == "Mülakata Çağrıldı"))
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="urgent-tab" data-bs-toggle="tab" data-bs-target="#urgent" type="button">
                            <i class="fas fa-clock me-1"></i>
                            Acil (@upcomingInterviews)
                        </button>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="applicationTabsContent">
                    <!-- All Applications Tab -->
                    <div class="tab-pane fade show active" id="all" role="tabpanel">
                        @await Html.PartialAsync("BaşvuruPaneliPartial", Model.OrderByDescending(b => b.BaşvuruTarihi))
                    </div>

                    <!-- New Applications Tab -->
                    <div class="tab-pane fade" id="new" role="tabpanel">
                        @await Html.PartialAsync("BaşvuruPaneliPartial", Model.Where(b => b.Durum == "Yeni Başvuru").OrderByDescending(b => b.BaşvuruTarihi))
                    </div>

                    <!-- Interview Applications Tab -->
                    <div class="tab-pane fade" id="interview" role="tabpanel">
                        @await Html.PartialAsync("BaşvuruPaneliPartial", Model.Where(b => b.Durum == "Mülakata Çağrıldı").OrderBy(b => b.MülakatTarihi))
                    </div>

                    <!-- Urgent Applications Tab -->
                    <div class="tab-pane fade" id="urgent" role="tabpanel">
                        @{
                            var urgentApps = Model.Where(b =>
                            (b.MülakatTarihi.HasValue && b.MülakatTarihi.Value >= DateTime.Now && b.MülakatTarihi.Value <= DateTime.Now.AddDays(7)) ||
                            (b.Durum == "Yeni Başvuru" && b.BaşvuruTarihi <= DateTime.Now.AddDays(-3))
                            ).OrderBy(b => b.MülakatTarihi ?? DateTime.MaxValue);
                        }
                        @await Html.PartialAsync("BaşvuruPaneliPartial", urgentApps)
                    </div>
                </div>
            </div>
        </div>

        <!-- Job Performance Summary -->
        <div class="row">
            @{
                var jobGroups = Model.GroupBy(b => new { b.İş?.Id, b.İş?.Başlık, b.İş?.Şirket })
                .Where(g => g.Key.Id.HasValue)
                .OrderByDescending(g => g.Count());
            }
            @foreach (var jobGroup in jobGroups)
            {
                <div class="col-lg-6 col-xl-4 mb-3">
                    <div class="card">
                        <div class="card-header bg-light">
                            <h6 class="mb-0">
                                <i class="fas fa-briefcase me-2"></i>
                                @jobGroup.Key.Başlık
                            </h6>
                            <small class="text-muted">@jobGroup.Key.Şirket</small>
                        </div>
                        <div class="card-body">
                            <div class="row text-center">
                                <div class="col-4">
                                    <div class="text-primary">
                                        <h5>@jobGroup.Count()</h5>
                                        <small>Başvuru</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="text-success">
                                        <h5>@jobGroup.Count(b => b.Durum == "Kabul Edildi")</h5>
                                        <small>Kabul</small>
                                    </div>
                                </div>
                                <div class="col-4">
                                    <div class="text-warning">
                                        <h5>@(jobGroup.Any() ? jobGroup.Average(b => b.Puan).ToString("F1") : "0")</h5>
                                        <small>Ort. Puan</small>
                                    </div>
                                </div>
                            </div>
                            <div class="mt-2">
                                <a href="@Url.Action("İşBaşvuruları", new { id = jobGroup.Key.Id })"
                                   class="btn btn-outline-primary btn-sm w-100">
                                    <i class="fas fa-eye me-1"></i>
                                    Başvuruları Görüntüle
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="text-center py-5">
                <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">Henüz başvuru yok</h4>
                <p class="text-muted">Sistem genelinde henüz hiç başvuru bulunmuyor.</p>
                <a href="@Url.Action("Index")" class="btn btn-primary">
                    <i class="fas fa-briefcase me-1"></i>
                    İş İlanlarını Görüntüle
                </a>
            </div>
        }
    </div>
</div>